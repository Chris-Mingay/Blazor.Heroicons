@using System.Reflection
@inherits HeroiconBase

<DynamicComponent Type="_razorComponentType" Parameters="AdditionalAttributes"></DynamicComponent>

@code {
    [Parameter]
    public HeroiconType Type { get; set; } = HeroiconType.Outline;
    private HeroiconType _heroiconType;
    public Type _razorComponentType = null!;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        //check to see if the icon parameters have changed
        if (_razorComponentType is null || _heroiconType != Type)
        {
            _heroiconType = Type;

            //get random icon
            var componentTypes = Assembly.GetExecutingAssembly().GetTypes()
            .Where(t => t.IsClass && t.Namespace == $"Blazor.Heroicons.{Type}");
            _razorComponentType = componentTypes.ElementAt(Random.Shared.Next(0, componentTypes.Count()));
        }
    }

}